{"version":3,"sources":["App.tsx","components/List.tsx","components/Button.tsx","index.tsx"],"names":["SortType","List","goods","map","good","Button","name","onClick","className","rest","type","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isReordered","reorderedGoods","visibleGoods","sort","curGood","nextGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","classNames","curState","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0ECfQC,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBACE,UAAQ,OADV,SAIGA,GAFIA,EAHE,KAFsB,E,gDCExBC,EAAoB,SAAC,GAAD,IAC/BC,EAD+B,EAC/BA,KAAMC,EADyB,EACzBA,QAASC,EADgB,EAChBA,UAAcC,EADE,wBAG/B,gDACEC,KAAK,SACLH,QAASA,EACTC,UAAWA,GACPC,GAJN,aAMGH,IAT4B,EFApBK,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGX,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAqCE,IAAMY,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASb,EAASgB,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EAAcF,IAAajB,EAASgB,MAAQF,EAC5CM,EAxCD,SACLlB,EADK,GAGM,IADTe,EACQ,EADRA,SAAUH,EACF,EADEA,WAENO,EAAY,YAAOnB,GAmBzB,OAjBAmB,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQP,GACN,KAAKjB,EAASyB,SACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKxB,EAAS2B,OACZ,OAAOJ,EAAQK,OAASJ,EAASI,OAEnC,QACE,OAAO,EAEZ,IAEGd,GACFO,EAAaQ,UAGRR,CACR,CAgBwBS,CACrBnB,EACA,CAAEG,aAAYG,aAGhB,OACE,sBAAKT,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEF,KAAK,sBACLE,UAAWuB,IACT,iBACA,CAAE,WAAYd,IAAajB,EAASyB,WAEtClB,QAAS,WACPW,EAAYlB,EAASyB,SACtB,IAGH,cAAC,EAAD,CACEnB,KAAK,iBACLE,UAAWuB,IACT,oBACA,CAAE,WAAYd,IAAajB,EAAS2B,SAEtCpB,QAAS,WACPW,EAAYlB,EAAS2B,OACtB,IAGH,cAAC,EAAD,CACErB,KAAK,UACLE,UAAWuB,IACT,oBACA,CAAE,YAAajB,IAEjBP,QA9Ca,WACnBQ,GAAc,SAAAiB,GAAQ,OAAKA,CAAL,GACvB,IA+CMb,GACC,cAAC,EAAD,CACEb,KAAK,QACLE,UAAU,4BACVD,QAjDW,WACnBQ,GAAc,GACdG,EAAYlB,EAASgB,KACtB,OAmDG,cAAC,EAAD,CAAMd,MAAOkB,MAGlB,EGxHDa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.4e308191.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { List } from './components/List';\nimport { Button } from './components/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((curGood, nextGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return curGood.localeCompare(nextGood);\n\n      case SortType.LENGTH:\n        return curGood.length - nextGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverseOrder = () => {\n    setIsReversed(curState => !curState);\n  };\n\n  const resetSorting = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const isReordered = sortType !== SortType.NONE || isReversed;\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <Button\n          name=\"Sort alphabetically\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n          }}\n        />\n\n        <Button\n          name=\"Sort by length\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        />\n\n        <Button\n          name=\"Reverse\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseOrder}\n        />\n\n        {isReordered && (\n          <Button\n            name=\"Reset\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          />\n        )}\n      </div>\n\n      <List goods={reorderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const List: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import { FC, MouseEvent } from 'react';\n\ninterface Props {\n  name: string,\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void,\n  className: string,\n}\n\nexport const Button: FC<Props> = ({\n  name, onClick, className, ...rest\n}) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    className={className}\n    {...rest}\n  >\n    {name}\n  </button>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}